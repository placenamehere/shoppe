#include "../lib/shoppe.js"#target photoshopapp.bringToFront();/*	EXIF_footer.js	Takes in a photograph, reads it's EXIF metadata and draws text at the bottom of the image*//*	MAIN SCRIPT BODY*/// 1A. check if current document exists because we'll use that, if it doesn't tell the user we need one.// HINT: normally you might trigger an open document window via this script, but for illustration we'll kick the user outtry {	if (app.documents.length > 0) {		// To keep the document history clean we'll, suspend history and wrap the functionality of this script in a function /single step		app.activeDocument.suspendHistory("EXIF Footer Script","myMain()");	} else {		alert("The EXIF Footer Script requires an open document to run correctly");	}} catch(e) {	/* something went wrong */	alert("An unexpected error occurred and the script did not complete.");	}/*	FUNCTIONS*/// a container function for the real work of the script function myMain() {	var aDoc = app.activeDocument,	    matteLayer,	    metadataLayer,	    metadataText = "";		// use pixels for measurements, return the document to the old state at the end			// 2A. make sure that the file is big enough to draw our metadata over (80px tall, 20px maring + 100px min for text wide)	if (!sjs.doc.isBigEnough(120,80)) {	  alert("The active document is not big enough to add an EXIF footer");	  return;	}	// 2B. make sure that the file has some EXIF data we can use - just a rough test	// note how some values are accessed directly from specific properties of the document's DocumentInfo property	// however some info may be burried in the EXIF data array	if ((aDoc.info.title == null) && (aDoc.info.copyrightNotice == null)	    || ((sjs.meta.getExif("Shutter Speed") == null) && (sjs.meta.getExif("Aperture Value") == null) && (sjs.meta.getExif("Focal Length") == null) && (sjs.meta.getExif("Iso Speed Ratings") == null))) {	    	  alert("The active document does not have metadata to use for an EXIF footer");	  return;	}	// 4. create new layer on top as background behind text / fill with opaque black	matteLayer = aDoc.artLayers.add();	matteLayer.name = "EXIF Footer Matte";	matteLayer.blendMode = BlendMode.MULTIPLY;	matteLayer.opacity = 60;		// select and fill the bottom 50px, across the whole width	aDoc.selection.select([[0,aDoc.height],[0,aDoc.height-80],[aDoc.width,aDoc.height-80],[aDoc.width,aDoc.height]]);	aDoc.selection.fill(sjs.color.newRGB(0,0,0));	aDoc.selection.deselect();	// 5. read EXIF to build string we want	// pattern: [Title||filename] [Date Taken] [Copyright] / [speed] at [aperture] ISO [iso], [focal legnth] (lens)	// 5A. build the first line	if (aDoc.info.title != null) {	  metadataText = metadataText + aDoc.info.title + " ";	}	if (aDoc.info.copyrightNotice != null) {	  metadataText = metadataText + aDoc.info.copyrightNotice + " ";	}	metadataText = metadataText + "\r"; // new line		// 5B. build the second line	if (sjs.meta.getExif("Shutter Speed") != null) {	  metadataText = metadataText + sjs.meta.getExif("Shutter Speed") + " ";	}	if (sjs.meta.getExif("Aperture Value") != null) {	  metadataText = metadataText + sjs.meta.getExif("Aperture Value") + " ";	}	if (sjs.meta.getExif("Iso Speed Ratings") != null) {	  metadataText = metadataText + "ISO " + sjs.meta.getExif("Iso Speed Ratings");	}	metadataText = metadataText + ", ";	if (sjs.meta.getExif("Focal Length") != null) {	  metadataText = metadataText + sjs.meta.getExif("Focal Length") + " ";	}	if (sjs.meta.getExif("Lens") != null) {	  metadataText = metadataText + "(" + sjs.meta.getExif("Lens") + ")";  }			// 6. add text layer with new text	metadataLayer = sjs.text.newLayer(metadataText);	metadataLayer.name = "EXIF Footer Text";	sjs.text.setOptions(metadataLayer,{	  size: '18',	  color: sjs.color.newRGB(255,255,255),	  fontName: 'Courier'	});		// position text layer 10px from left, and somewhere in the vertical middle of the matte	metadataLayer.textItem.position = [10,aDoc.height-50];}